# services:
#   keycloak:
#     image: quay.io/keycloak/keycloak:22.0.5
#     container_name: keycloak
#     command: start-dev
#     environment:
#       KEYCLOAK_ADMIN: admin
#       KEYCLOAK_ADMIN_PASSWORD: admin
#     ports:
#       - 8081:8080
#     networks:
#       - kongnetwork
#   kong-database:
#     image: postgres:13
#     container_name: kong-database
#     environment:
#       POSTGRES_USER: kong
#       POSTGRES_PASSWORD: kong
#       POSTGRES_DB: kong
#     ports:
#       - "5432:5432"
#     volumes:
#       - kong-db-data:/var/lib/postgresql/data
#       # - ./init-konga-db.sql:/docker-entrypoint-initdb.d/init-konga-db.sql
#     networks:
#       - kongnetwork

#   kong-migrations:
#     image: kong:3.8
#     # command: /bin/sh -c "kong migrations bootstrap && kong migrations up && kong migrations finish"
#     environment:
#       KONG_DATABASE: postgres
#       KONG_PG_HOST: kong-database
#       KONG_PG_USER: kong
#       KONG_PG_PASSWORD: kong
#     depends_on:
#       - kong-database
#     networks:
#       - kongnetwork

#   kong:
#     image: kong/kong-gateway:3.8.0.0 # <--- thay kong-custom báº±ng kong/kong-gateway
#     container_name: kong
#     depends_on:
#       - kong-migrations
#     environment:
#       KONG_DATABASE: postgres
#       KONG_PG_HOST: kong-database
#       KONG_PG_USER: kong
#       KONG_PG_PASSWORD: kong
#       KONG_PROXY_ACCESS_LOG: /dev/stdout
#       KONG_PROXY_ERROR_LOG: /dev/stderr
#       KONG_ADMIN_ACCESS_LOG: /dev/stdout
#       KONG_ADMIN_ERROR_LOG: /dev/stderr

#       # API & Proxy
#       KONG_PROXY_LISTEN: 0.0.0.0:8000
#       KONG_ADMIN_LISTEN: 0.0.0.0:8001

#       # Manager UI
#       KONG_MANAGER_LISTEN: 0.0.0.0:8002
#       KONG_ADMIN_GUI_PATH: /
#       KONG_ADMIN_GUI_URL: http://localhost:8002

#     ports:
#       - "8000:8000" # Proxy
#       - "8001:8001" # Admin API
#       - "8002:8002" # Kong Manager UI
#     networks:
#       - kongnetwork
# volumes:
#   kong-db-data:
# networks:
#   kongnetwork:
#     driver: bridge

version: "3.9"

services:
  # NestJS service
  nestjs:
    build: ./cic
    container_name: nestjs-app
    restart: unless-stopped
    networks:
      - kong-net

  # Kong Postgres DB
  kong-database:
    image: postgres:13
    container_name: kong-database
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    ports:
      - "5432:5432"
    volumes:
      - kong_data:/var/lib/postgresql/data
    networks:
      - kong-net

  kong-migrations:
    image: kong:3.6
    container_name: kong-migrations
    depends_on:
      - kong-database
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_DATABASE: kong
    command: >
      sh -c "kong migrations bootstrap &&
             kong migrations up && tail -f /dev/null"
    networks:
      - kong-net

  kong:
    container_name: kong-api-gateway
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - kong-database
      - kong-migrations
      - nestjs
      - keycloak
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_MANAGER_LISTEN: 0.0.0.0:8002
      KONG_PLUGINS: bundled,xml2json,myjwt
      KONG_LUA_PACKAGE_PATH: /usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua;./?.lua;./?/init.lua;
    ports:
      - "8000:8000" # Proxy
      - "8001:8001" # Admin API
      - "8002:8002" # Manager UI
    networks:
      - kong-net

  # Keycloak service (updated to the official Keycloak image)
  keycloak:
    image: quay.io/keycloak/keycloak:15.0.2
    container_name: keycloak
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_REALM: myrealm
      KEYCLOAK_HOSTNAME: keycloak.local
    ports:
      - "8080:8080"
    networks:
      - kong-net

volumes:
  kong_data:

networks:
  kong-net:
    driver: bridge
